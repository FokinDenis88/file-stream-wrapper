!!0) Переписать чтение таблицы-базы данных под тип variant
!0) Прописать в каждую функцию возможность работать только с потоком. Это позволит дописывать или дочитывать открытый файл.
1) Проверить не перемещаются ли большие объемы информации через конструкторы копирования! Заменить на конструкторы перемещения
2) Если вводить строку с русскими символами чтение и запись не будут работать. Возможно нужно менять локаль
3) ReadSerializedDataFile
    auto size = SizeOfFile<CharT>(read_file_stream);
    std::vector<CharT> file_content(size);
    При чтении сериализованных данных нужно скорректировать размер массива с учетом размера char или wchar_t
4) Сначала нужно записывать в бинарный файл BOM flag - byte oreder mark 0xFEFF
5) К сожалению, wofstream может выводить только симолы char или зарезанные зауженные символы в файл.
6) Может больше применять std::byte и char16_t, char32_t
7) Добавить конвертацию из Big endian в little endian
8) Copy File реализовать функцию копирования файла
9) Search in File. Функция поиска данных внутри любого файла
10) // TODO: Реализовать Неформатированное чтение и запись файлов csv. Функции должны подходить для любых шаблонов csv файла.
11) Сделать нормальным GetFileLines - написать его для потоков?

https://stackoverflow.com/questions/7686939/c-simple-return-value-from-stdthread

#include <thread>
#include <future>

void func(std::promise<int> && p) {
    p.set_value(1);
}

std::promise<int> p;
auto f = p.get_future();
std::thread t(&func, std::move(p));
t.join();
int i = f.get();




#include <thread>
#include <future>
int func() { return 1; }
std::future<int> ret = std::async(&func);
int i = ret.get();



